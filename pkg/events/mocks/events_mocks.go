// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-ebpf-sdk-go/pkg/events (interfaces: Events)

// Package mock_events is a generated GoMock package.
package mock_events

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEvents is a mock of Events interface.
type MockEvents struct {
	ctrl     *gomock.Controller
	recorder *MockEventsMockRecorder
}

// MockEventsMockRecorder is the mock recorder for MockEvents.
type MockEventsMockRecorder struct {
	mock *MockEvents
}

// NewMockEvents creates a new mock instance.
func NewMockEvents(ctrl *gomock.Controller) *MockEvents {
	mock := &MockEvents{ctrl: ctrl}
	mock.recorder = &MockEventsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEvents) EXPECT() *MockEventsMockRecorder {
	return m.recorder
}

// InitRingBuffer mocks base method.
func (m *MockEvents) InitRingBuffer(arg0 []int) (map[int]chan []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitRingBuffer", arg0)
	ret0, _ := ret[0].(map[int]chan []byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitRingBuffer indicates an expected call of InitRingBuffer.
func (mr *MockEventsMockRecorder) InitRingBuffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitRingBuffer", reflect.TypeOf((*MockEvents)(nil).InitRingBuffer), arg0)
}
